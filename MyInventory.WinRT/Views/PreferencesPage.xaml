<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MyInventory.WinRT.Views.PreferencesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MyInventory.WinRT.Views"
    xmlns:common="using:MyInventory.WinRT.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:converters="using:MyInventory.WinRT.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:EnumToItemSourceConverter x:Name="EnumToItemSourceConverter"/>
        <converters:EnumToStringConveter x:Name="EnumToStringConveter"/>
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Preferences</x:String>
    </Page.Resources>

    <Page.BottomAppBar>
        <AppBar Padding="10,0,10,0">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource SaveAppBarButtonStyle}" Command="{Binding SaveCommand}"/>
                    <Button Style="{StaticResource CancelAppBarButtonStyle}" Command="{Binding CancelCommand}"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>
    
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="10,20,0,10" x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <ScrollViewer Margin="12" Grid.Row="1">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="General" Margin="0,10,0,30" Style="{StaticResource GroupHeaderTextStyle}" />
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Style="{StaticResource ItemTextStyle}" Text="Text Size" />
                    <ComboBox  Grid.Column="1" Grid.Row="0" Margin="0,0,30,0" ItemsSource="{Binding Item.TextSize,  Converter={StaticResource EnumToItemSourceConverter}}"  SelectedItem="{Binding Item.TextSize, Mode=TwoWay, Converter={StaticResource EnumToStringConveter},ConverterParameter=TextSize}" />
                    
                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Style="{StaticResource ItemTextStyle}" Text="Automatic Refresh" />
                    <ToggleSwitch IsOn="{Binding Item.AutoRefresh}" Grid.Column="1" Grid.Row="1" ></ToggleSwitch>

                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" Style="{StaticResource ItemTextStyle}" Text="Synchronization Interval"/>
                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Item.SyncInterval, Mode=TwoWay}"  x:Name="SyncInterval" Margin="0,0,30,0" />

                </Grid>
                <TextBlock Margin="0,010,10,20" Style="{StaticResource CaptionTextStyle}" Text="This is just an example setting screen. Feel free to define the actual settings that applicable to your app." />
                <TextBlock Margin="0,10,20,20" Text="Notification"  Style="{StaticResource GroupHeaderTextStyle}" />
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Style="{StaticResource ItemTextStyle}" Text="Enable Notification" />
                    <ToggleSwitch Grid.Column="1" Grid.Row="0" IsOn="{Binding Item.EnableNotification, Mode=TwoWay}"  ></ToggleSwitch>

                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Style="{StaticResource ItemTextStyle}"  Text="In-App Sound" />
                    <ToggleSwitch Grid.Column="1" Grid.Row="1" IsOn="{Binding Item.EnableInAppSound, Mode=TwoWay}" ></ToggleSwitch>

                    <TextBlock VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" Style="{StaticResource ItemTextStyle}" Text="In-App Vibrate"/>
                    <ToggleSwitch Grid.Column="1" Grid.Row="2" IsOn="{Binding Item.EnableInAppVibrate, Mode=TwoWay}"  ></ToggleSwitch>
                </Grid>

            </StackPanel>
           
        </ScrollViewer>
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                  
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
